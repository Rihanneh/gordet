datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model Project {
    id Int @id @default(autoincrement())
    title String @db.VarChar(50)
    slug String @db.VarChar(50)
    description String @db.Text
    date DateTime @db.DateTime(0)
    created_at DateTime @default(now()) @db.DateTime(0)
    updated_at DateTime @updatedAt 
    images Image[] @relation("project_images")

    @@map("projects")
}

model Message {
    id Int @id @default(autoincrement())
    first_name String @db.VarChar(150)
    last_name String @db.VarChar(150)
    company_name String? @db.VarChar(150)
    email String @db.VarChar(150)
    subject String @db.VarChar(255)
    message String @db.Text
    created_at DateTime @default(now()) @db.DateTime(0)
    updated_at DateTime @default(now()) @db.DateTime(0)

    @@map("messages")
}

model Appointment {
    id Int @id @default(autoincrement())
    first_name String @db.VarChar(150)
    last_name String @db.VarChar(150)
    company_name String? @db.VarChar(150)
    email String @db.VarChar(150)
    appointment_date DateTime @db.DateTime(0)
    appointment_time DateTime @db.DateTime(0)
    subject String @db.VarChar(255)
    message String @db.Text
    status Status @default(PENDING)
    created_at DateTime @default(now()) @db.DateTime(0)
    updated_at DateTime @default(now()) @db.DateTime(0)

    @@map("appointments")
}

model User {
    id Int @id @default(autoincrement())
    email String @db.VarChar(150) @unique
    password String @db.VarChar(255)
    created_at DateTime @default(now()) @db.DateTime(0)
    updated_at DateTime @default(now()) @db.DateTime(0)

    @@map("users")
}

model Image {
    id Int @id @default(autoincrement())
    path String @db.VarChar(255)
    created_at DateTime @default(now()) @db.DateTime(0)
    updated_at DateTime @default(now()) @db.DateTime(0)
    service Service
    projects Project[] @relation("project_images")

    @@map("images")
}

model Service {
    id Int @id @default(autoincrement())
    title String @db.VarChar(50)
    slug String @db.VarChar(50)
    content String @db.Text
    created_at DateTime @default(now()) @db.DateTime(0)
    updated_at DateTime @default(now()) @db.DateTime(0)
    id_image Int @unique(map: "id_image")
    image Image @relation(fields: [id_image], references: [id], onDelete: Cascade, onUpdate: NoAction)

    @@map("services")
}

enum Status {
    PENDING
    CANCELED
    CONFIRMED
}
